// This file was AUTOGENERATED; do not edit!

#[allow(unused_imports)]
use super::super::assert_eq;
use TestPPU;

#[inline(never)]
pub fn test_vram_access_after_scrolling( ppu: &mut TestPPU ) {
    assert_eq!( ppu.scanline(), 261 );
    assert_eq!( ppu.dot(), 0 );
    for i in 0..4096u32 {
        ppu.write_vram( i as u16, (i + 0x80) as u8 );
    }
    for i in 0..960u32 {
        ppu.write_vram( (0x2000 + i) as u16, (i + 0x80) as u8 );
    }
    for i in 0..64u32 {
        ppu.write_vram( (0x2000 + 960 + i) as u16, (0x80 | i) as u8 );
    }
    ppu.write_ioreg( 0, 0xB1 );
    ppu.step_pixel(); // 261 000 -> 261 001
    ppu.step_pixel(); // 261 001 -> 261 002
    ppu.step_pixel(); // 261 002 -> 261 003
    ppu.write_ioreg( 1, 0x1E );
    ppu.step_pixel(); // 261 003 -> 261 004
    ppu.step_pixel(); // 261 004 -> 261 005
    ppu.step_pixel(); // 261 005 -> 261 006
    for _ in 0..255u32 {
        ppu.step_pixel();
    } // 261 260 -> 261 261
    assert_eq( ppu.get_temporary_address(), 0x0400 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.write_ioreg( 5, 0x29 );
    ppu.step_pixel(); // 261 261 -> 261 262
    ppu.step_pixel(); // 261 262 -> 261 263
    ppu.step_pixel(); // 261 263 -> 261 264
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.write_ioreg( 5, 0x00 );
    ppu.step_pixel(); // 261 264 -> 261 265
    ppu.step_pixel(); // 261 265 -> 261 266
    ppu.step_pixel(); // 261 266 -> 261 267
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 267 -> 261 268
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 268 -> 261 269
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 269 -> 261 270
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 270 -> 261 271
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 271 -> 261 272
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 272 -> 261 273
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 273 -> 261 274
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 274 -> 261 275
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 275 -> 261 276
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 276 -> 261 277
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 277 -> 261 278
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 278 -> 261 279
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 279 -> 261 280
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 280 -> 261 281
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 281 -> 261 282
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 282 -> 261 283
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 283 -> 261 284
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 284 -> 261 285
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 285 -> 261 286
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 286 -> 261 287
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 287 -> 261 288
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 288 -> 261 289
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 289 -> 261 290
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 290 -> 261 291
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 291 -> 261 292
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 292 -> 261 293
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 293 -> 261 294
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 294 -> 261 295
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 295 -> 261 296
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 296 -> 261 297
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 297 -> 261 298
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 298 -> 261 299
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 299 -> 261 300
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 300 -> 261 301
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 301 -> 261 302
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 302 -> 261 303
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 303 -> 261 304
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 304 -> 261 305
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 305 -> 261 306
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 306 -> 261 307
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 307 -> 261 308
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 308 -> 261 309
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 309 -> 261 310
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 310 -> 261 311
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 311 -> 261 312
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 312 -> 261 313
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 313 -> 261 314
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 314 -> 261 315
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 315 -> 261 316
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 316 -> 261 317
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 317 -> 261 318
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x0005, 0x85 );
    ppu.step_pixel(); // 261 318 -> 261 319
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 319 -> 261 320
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x000D, 0x8D );
    ppu.step_pixel(); // 261 320 -> 261 321
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 321 -> 261 322
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x2400, 0x80 );
    ppu.step_pixel(); // 261 322 -> 261 323
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 323 -> 261 324
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x27C0, 0x80 );
    ppu.step_pixel(); // 261 324 -> 261 325
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 325 -> 261 326
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x1800, 0x80 );
    ppu.step_pixel(); // 261 326 -> 261 327
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 327 -> 261 328
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0400 );
    ppu.expect_vram_read( 0x1808, 0x88 );
    ppu.step_pixel(); // 261 328 -> 261 329
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 329 -> 261 330
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_vram_read( 0x2401, 0x81 );
    ppu.step_pixel(); // 261 330 -> 261 331
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 331 -> 261 332
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_vram_read( 0x27C0, 0x80 );
    ppu.step_pixel(); // 261 332 -> 261 333
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 333 -> 261 334
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_vram_read( 0x1810, 0x90 );
    ppu.step_pixel(); // 261 334 -> 261 335
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 335 -> 261 336
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0401 );
    ppu.expect_vram_read( 0x1818, 0x98 );
    ppu.step_pixel(); // 261 336 -> 261 337
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 337 -> 261 338
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x2402, 0x82 );
    ppu.step_pixel(); // 261 338 -> 261 339
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 261 339 -> 261 340
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x2402, 0x82 );
    ppu.step_pixel(); // 261 340 -> 000 000
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 000 -> 000 001
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 001 -> 000 002
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x2402, 0x82 );
    ppu.step_pixel(); // 000 002 -> 000 003
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 003 -> 000 004
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x27C0, 0x80 );
    ppu.step_pixel(); // 000 004 -> 000 005
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 005 -> 000 006
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x1820, 0xA0 );
    ppu.step_pixel(); // 000 006 -> 000 007
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 007 -> 000 008
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0402 );
    ppu.expect_vram_read( 0x1828, 0xA8 );
    ppu.step_pixel(); // 000 008 -> 000 009
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 009 -> 000 010
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_vram_read( 0x2403, 0x83 );
    ppu.step_pixel(); // 000 010 -> 000 011
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 011 -> 000 012
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_vram_read( 0x27C0, 0x80 );
    ppu.step_pixel(); // 000 012 -> 000 013
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 013 -> 000 014
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_vram_read( 0x1830, 0xB0 );
    ppu.step_pixel(); // 000 014 -> 000 015
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 015 -> 000 016
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0403 );
    ppu.expect_vram_read( 0x1838, 0xB8 );
    ppu.step_pixel(); // 000 016 -> 000 017
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 017 -> 000 018
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_vram_read( 0x2404, 0x84 );
    ppu.step_pixel(); // 000 018 -> 000 019
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 019 -> 000 020
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_vram_read( 0x27C1, 0x81 );
    ppu.step_pixel(); // 000 020 -> 000 021
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 021 -> 000 022
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_vram_read( 0x1840, 0xC0 );
    ppu.step_pixel(); // 000 022 -> 000 023
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 023 -> 000 024
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0404 );
    ppu.expect_vram_read( 0x1848, 0xC8 );
    ppu.step_pixel(); // 000 024 -> 000 025
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 025 -> 000 026
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_vram_read( 0x2405, 0x85 );
    ppu.step_pixel(); // 000 026 -> 000 027
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 027 -> 000 028
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_vram_read( 0x27C1, 0x81 );
    ppu.step_pixel(); // 000 028 -> 000 029
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 029 -> 000 030
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_vram_read( 0x1850, 0xD0 );
    ppu.step_pixel(); // 000 030 -> 000 031
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 031 -> 000 032
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0405 );
    ppu.expect_vram_read( 0x1858, 0xD8 );
    ppu.step_pixel(); // 000 032 -> 000 033
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 033 -> 000 034
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_vram_read( 0x2406, 0x86 );
    ppu.step_pixel(); // 000 034 -> 000 035
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 035 -> 000 036
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_vram_read( 0x27C1, 0x81 );
    ppu.step_pixel(); // 000 036 -> 000 037
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 037 -> 000 038
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_vram_read( 0x1860, 0xE0 );
    ppu.step_pixel(); // 000 038 -> 000 039
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 039 -> 000 040
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0406 );
    ppu.expect_vram_read( 0x1868, 0xE8 );
    ppu.step_pixel(); // 000 040 -> 000 041
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 041 -> 000 042
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_vram_read( 0x2407, 0x87 );
    ppu.step_pixel(); // 000 042 -> 000 043
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 043 -> 000 044
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_vram_read( 0x27C1, 0x81 );
    ppu.step_pixel(); // 000 044 -> 000 045
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 045 -> 000 046
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_vram_read( 0x1870, 0xF0 );
    ppu.step_pixel(); // 000 046 -> 000 047
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 047 -> 000 048
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0407 );
    ppu.expect_vram_read( 0x1878, 0xF8 );
    ppu.step_pixel(); // 000 048 -> 000 049
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 049 -> 000 050
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_vram_read( 0x2408, 0x88 );
    ppu.step_pixel(); // 000 050 -> 000 051
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 051 -> 000 052
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 000 052 -> 000 053
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 053 -> 000 054
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_vram_read( 0x1880, 0x00 );
    ppu.step_pixel(); // 000 054 -> 000 055
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 055 -> 000 056
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0408 );
    ppu.expect_vram_read( 0x1888, 0x08 );
    ppu.step_pixel(); // 000 056 -> 000 057
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 057 -> 000 058
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_vram_read( 0x2409, 0x89 );
    ppu.step_pixel(); // 000 058 -> 000 059
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 059 -> 000 060
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 000 060 -> 000 061
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 061 -> 000 062
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_vram_read( 0x1890, 0x10 );
    ppu.step_pixel(); // 000 062 -> 000 063
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 063 -> 000 064
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0409 );
    ppu.expect_vram_read( 0x1898, 0x18 );
    ppu.step_pixel(); // 000 064 -> 000 065
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 065 -> 000 066
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_vram_read( 0x240A, 0x8A );
    ppu.step_pixel(); // 000 066 -> 000 067
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 067 -> 000 068
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 000 068 -> 000 069
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 069 -> 000 070
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_vram_read( 0x18A0, 0x20 );
    ppu.step_pixel(); // 000 070 -> 000 071
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 071 -> 000 072
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040A );
    ppu.expect_vram_read( 0x18A8, 0x28 );
    ppu.step_pixel(); // 000 072 -> 000 073
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 073 -> 000 074
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_vram_read( 0x240B, 0x8B );
    ppu.step_pixel(); // 000 074 -> 000 075
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 075 -> 000 076
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 000 076 -> 000 077
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 077 -> 000 078
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_vram_read( 0x18B0, 0x30 );
    ppu.step_pixel(); // 000 078 -> 000 079
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 079 -> 000 080
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040B );
    ppu.expect_vram_read( 0x18B8, 0x38 );
    ppu.step_pixel(); // 000 080 -> 000 081
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 081 -> 000 082
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_vram_read( 0x240C, 0x8C );
    ppu.step_pixel(); // 000 082 -> 000 083
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 083 -> 000 084
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 000 084 -> 000 085
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 085 -> 000 086
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_vram_read( 0x18C0, 0x40 );
    ppu.step_pixel(); // 000 086 -> 000 087
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 087 -> 000 088
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040C );
    ppu.expect_vram_read( 0x18C8, 0x48 );
    ppu.step_pixel(); // 000 088 -> 000 089
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 089 -> 000 090
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_vram_read( 0x240D, 0x8D );
    ppu.step_pixel(); // 000 090 -> 000 091
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 091 -> 000 092
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 000 092 -> 000 093
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 093 -> 000 094
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_vram_read( 0x18D0, 0x50 );
    ppu.step_pixel(); // 000 094 -> 000 095
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 095 -> 000 096
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040D );
    ppu.expect_vram_read( 0x18D8, 0x58 );
    ppu.step_pixel(); // 000 096 -> 000 097
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 097 -> 000 098
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_vram_read( 0x240E, 0x8E );
    ppu.step_pixel(); // 000 098 -> 000 099
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 099 -> 000 100
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 000 100 -> 000 101
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 101 -> 000 102
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_vram_read( 0x18E0, 0x60 );
    ppu.step_pixel(); // 000 102 -> 000 103
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 103 -> 000 104
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040E );
    ppu.expect_vram_read( 0x18E8, 0x68 );
    ppu.step_pixel(); // 000 104 -> 000 105
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 105 -> 000 106
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_vram_read( 0x240F, 0x8F );
    ppu.step_pixel(); // 000 106 -> 000 107
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 107 -> 000 108
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 000 108 -> 000 109
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 109 -> 000 110
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_vram_read( 0x18F0, 0x70 );
    ppu.step_pixel(); // 000 110 -> 000 111
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 111 -> 000 112
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x040F );
    ppu.expect_vram_read( 0x18F8, 0x78 );
    ppu.step_pixel(); // 000 112 -> 000 113
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 113 -> 000 114
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_vram_read( 0x2410, 0x90 );
    ppu.step_pixel(); // 000 114 -> 000 115
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 115 -> 000 116
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 000 116 -> 000 117
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 117 -> 000 118
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_vram_read( 0x1900, 0x80 );
    ppu.step_pixel(); // 000 118 -> 000 119
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 119 -> 000 120
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0410 );
    ppu.expect_vram_read( 0x1908, 0x88 );
    ppu.step_pixel(); // 000 120 -> 000 121
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 121 -> 000 122
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_vram_read( 0x2411, 0x91 );
    ppu.step_pixel(); // 000 122 -> 000 123
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 123 -> 000 124
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 000 124 -> 000 125
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 125 -> 000 126
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_vram_read( 0x1910, 0x90 );
    ppu.step_pixel(); // 000 126 -> 000 127
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 127 -> 000 128
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0411 );
    ppu.expect_vram_read( 0x1918, 0x98 );
    ppu.step_pixel(); // 000 128 -> 000 129
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 129 -> 000 130
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_vram_read( 0x2412, 0x92 );
    ppu.step_pixel(); // 000 130 -> 000 131
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 131 -> 000 132
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 000 132 -> 000 133
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 133 -> 000 134
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_vram_read( 0x1920, 0xA0 );
    ppu.step_pixel(); // 000 134 -> 000 135
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 135 -> 000 136
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0412 );
    ppu.expect_vram_read( 0x1928, 0xA8 );
    ppu.step_pixel(); // 000 136 -> 000 137
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 137 -> 000 138
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_vram_read( 0x2413, 0x93 );
    ppu.step_pixel(); // 000 138 -> 000 139
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 139 -> 000 140
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 000 140 -> 000 141
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 141 -> 000 142
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_vram_read( 0x1930, 0xB0 );
    ppu.step_pixel(); // 000 142 -> 000 143
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 143 -> 000 144
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0413 );
    ppu.expect_vram_read( 0x1938, 0xB8 );
    ppu.step_pixel(); // 000 144 -> 000 145
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 145 -> 000 146
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_vram_read( 0x2414, 0x94 );
    ppu.step_pixel(); // 000 146 -> 000 147
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 147 -> 000 148
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 000 148 -> 000 149
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 149 -> 000 150
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_vram_read( 0x1940, 0xC0 );
    ppu.step_pixel(); // 000 150 -> 000 151
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 151 -> 000 152
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0414 );
    ppu.expect_vram_read( 0x1948, 0xC8 );
    ppu.step_pixel(); // 000 152 -> 000 153
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 153 -> 000 154
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_vram_read( 0x2415, 0x95 );
    ppu.step_pixel(); // 000 154 -> 000 155
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 155 -> 000 156
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 000 156 -> 000 157
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 157 -> 000 158
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_vram_read( 0x1950, 0xD0 );
    ppu.step_pixel(); // 000 158 -> 000 159
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 159 -> 000 160
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0415 );
    ppu.expect_vram_read( 0x1958, 0xD8 );
    ppu.step_pixel(); // 000 160 -> 000 161
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 161 -> 000 162
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_vram_read( 0x2416, 0x96 );
    ppu.step_pixel(); // 000 162 -> 000 163
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 163 -> 000 164
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 000 164 -> 000 165
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 165 -> 000 166
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_vram_read( 0x1960, 0xE0 );
    ppu.step_pixel(); // 000 166 -> 000 167
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 167 -> 000 168
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0416 );
    ppu.expect_vram_read( 0x1968, 0xE8 );
    ppu.step_pixel(); // 000 168 -> 000 169
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 169 -> 000 170
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_vram_read( 0x2417, 0x97 );
    ppu.step_pixel(); // 000 170 -> 000 171
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 171 -> 000 172
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 000 172 -> 000 173
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 173 -> 000 174
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_vram_read( 0x1970, 0xF0 );
    ppu.step_pixel(); // 000 174 -> 000 175
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 175 -> 000 176
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0417 );
    ppu.expect_vram_read( 0x1978, 0xF8 );
    ppu.step_pixel(); // 000 176 -> 000 177
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 177 -> 000 178
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_vram_read( 0x2418, 0x98 );
    ppu.step_pixel(); // 000 178 -> 000 179
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 179 -> 000 180
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 000 180 -> 000 181
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 181 -> 000 182
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_vram_read( 0x1980, 0x00 );
    ppu.step_pixel(); // 000 182 -> 000 183
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 183 -> 000 184
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0418 );
    ppu.expect_vram_read( 0x1988, 0x08 );
    ppu.step_pixel(); // 000 184 -> 000 185
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 185 -> 000 186
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_vram_read( 0x2419, 0x99 );
    ppu.step_pixel(); // 000 186 -> 000 187
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 187 -> 000 188
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 000 188 -> 000 189
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 189 -> 000 190
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_vram_read( 0x1990, 0x10 );
    ppu.step_pixel(); // 000 190 -> 000 191
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 191 -> 000 192
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0419 );
    ppu.expect_vram_read( 0x1998, 0x18 );
    ppu.step_pixel(); // 000 192 -> 000 193
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 193 -> 000 194
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_vram_read( 0x241A, 0x9A );
    ppu.step_pixel(); // 000 194 -> 000 195
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 195 -> 000 196
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 000 196 -> 000 197
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 197 -> 000 198
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_vram_read( 0x19A0, 0x20 );
    ppu.step_pixel(); // 000 198 -> 000 199
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 199 -> 000 200
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041A );
    ppu.expect_vram_read( 0x19A8, 0x28 );
    ppu.step_pixel(); // 000 200 -> 000 201
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 201 -> 000 202
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_vram_read( 0x241B, 0x9B );
    ppu.step_pixel(); // 000 202 -> 000 203
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 203 -> 000 204
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 000 204 -> 000 205
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 205 -> 000 206
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_vram_read( 0x19B0, 0x30 );
    ppu.step_pixel(); // 000 206 -> 000 207
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 207 -> 000 208
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041B );
    ppu.expect_vram_read( 0x19B8, 0x38 );
    ppu.step_pixel(); // 000 208 -> 000 209
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 209 -> 000 210
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_vram_read( 0x241C, 0x9C );
    ppu.step_pixel(); // 000 210 -> 000 211
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 211 -> 000 212
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 000 212 -> 000 213
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 213 -> 000 214
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_vram_read( 0x19C0, 0x40 );
    ppu.step_pixel(); // 000 214 -> 000 215
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 215 -> 000 216
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041C );
    ppu.expect_vram_read( 0x19C8, 0x48 );
    ppu.step_pixel(); // 000 216 -> 000 217
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 217 -> 000 218
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_vram_read( 0x241D, 0x9D );
    ppu.step_pixel(); // 000 218 -> 000 219
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 219 -> 000 220
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 000 220 -> 000 221
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 221 -> 000 222
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_vram_read( 0x19D0, 0x50 );
    ppu.step_pixel(); // 000 222 -> 000 223
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 223 -> 000 224
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041D );
    ppu.expect_vram_read( 0x19D8, 0x58 );
    ppu.step_pixel(); // 000 224 -> 000 225
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 225 -> 000 226
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_vram_read( 0x241E, 0x9E );
    ppu.step_pixel(); // 000 226 -> 000 227
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 227 -> 000 228
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 000 228 -> 000 229
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 229 -> 000 230
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_vram_read( 0x19E0, 0x60 );
    ppu.step_pixel(); // 000 230 -> 000 231
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 231 -> 000 232
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041E );
    ppu.expect_vram_read( 0x19E8, 0x68 );
    ppu.step_pixel(); // 000 232 -> 000 233
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 233 -> 000 234
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_vram_read( 0x241F, 0x9F );
    ppu.step_pixel(); // 000 234 -> 000 235
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 235 -> 000 236
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 000 236 -> 000 237
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 237 -> 000 238
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_vram_read( 0x19F0, 0x70 );
    ppu.step_pixel(); // 000 238 -> 000 239
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 239 -> 000 240
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x041F );
    ppu.expect_vram_read( 0x19F8, 0x78 );
    ppu.step_pixel(); // 000 240 -> 000 241
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 241 -> 000 242
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_vram_read( 0x2000, 0x80 );
    ppu.step_pixel(); // 000 242 -> 000 243
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 243 -> 000 244
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 000 244 -> 000 245
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 245 -> 000 246
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_vram_read( 0x1800, 0x80 );
    ppu.step_pixel(); // 000 246 -> 000 247
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 247 -> 000 248
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0000 );
    ppu.expect_vram_read( 0x1808, 0x88 );
    ppu.step_pixel(); // 000 248 -> 000 249
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 249 -> 000 250
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_vram_read( 0x2001, 0x81 );
    ppu.step_pixel(); // 000 250 -> 000 251
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 251 -> 000 252
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 000 252 -> 000 253
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 253 -> 000 254
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_vram_read( 0x1810, 0x90 );
    ppu.step_pixel(); // 000 254 -> 000 255
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 255 -> 000 256
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x0001 );
    ppu.expect_vram_read( 0x1818, 0x98 );
    ppu.step_pixel(); // 000 256 -> 000 257
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 257 -> 000 258
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x2002, 0x82 );
    ppu.step_pixel(); // 000 258 -> 000 259
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 259 -> 000 260
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x2405, 0x85 );
    ppu.step_pixel(); // 000 260 -> 000 261
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 261 -> 000 262
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x0000, 0x80 );
    ppu.step_pixel(); // 000 262 -> 000 263
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 263 -> 000 264
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x0008, 0x88 );
    ppu.step_pixel(); // 000 264 -> 000 265
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 265 -> 000 266
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x2405, 0x85 );
    ppu.step_pixel(); // 000 266 -> 000 267
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 267 -> 000 268
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x2405, 0x85 );
    ppu.step_pixel(); // 000 268 -> 000 269
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 269 -> 000 270
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x0000, 0x80 );
    ppu.step_pixel(); // 000 270 -> 000 271
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 271 -> 000 272
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x0008, 0x88 );
    ppu.step_pixel(); // 000 272 -> 000 273
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 273 -> 000 274
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_vram_read( 0x2405, 0x85 );
    ppu.step_pixel(); // 000 274 -> 000 275
    assert_eq( ppu.get_temporary_address(), 0x0405 );
    assert_eq( ppu.get_current_address(), 0x1405 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 000 275 -> 000 276
    ppu.write_ioreg( 5, 0x00 );
    ppu.step_pixel(); // 000 276 -> 000 277
    ppu.step_pixel(); // 000 277 -> 000 278
    ppu.step_pixel(); // 000 278 -> 000 279
    ppu.write_ioreg( 5, 0x29 );
    ppu.step_pixel(); // 000 279 -> 000 280
    ppu.step_pixel(); // 000 280 -> 000 281
    ppu.step_pixel(); // 000 281 -> 000 282
    ppu.step_scanline();
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 000 -> 001 001
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 001 -> 001 002
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_vram_read( 0x2407, 0x87 );
    ppu.step_pixel(); // 001 002 -> 001 003
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 003 -> 001 004
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_vram_read( 0x27C1, 0x81 );
    ppu.step_pixel(); // 001 004 -> 001 005
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 005 -> 001 006
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_vram_read( 0x1871, 0xF1 );
    ppu.step_pixel(); // 001 006 -> 001 007
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 007 -> 001 008
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1407 );
    ppu.expect_vram_read( 0x1879, 0xF9 );
    ppu.step_pixel(); // 001 008 -> 001 009
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 009 -> 001 010
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_vram_read( 0x2408, 0x88 );
    ppu.step_pixel(); // 001 010 -> 001 011
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 011 -> 001 012
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 001 012 -> 001 013
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 013 -> 001 014
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_vram_read( 0x1881, 0x01 );
    ppu.step_pixel(); // 001 014 -> 001 015
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 015 -> 001 016
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1408 );
    ppu.expect_vram_read( 0x1889, 0x09 );
    ppu.step_pixel(); // 001 016 -> 001 017
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 017 -> 001 018
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_vram_read( 0x2409, 0x89 );
    ppu.step_pixel(); // 001 018 -> 001 019
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 019 -> 001 020
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 001 020 -> 001 021
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 021 -> 001 022
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_vram_read( 0x1891, 0x11 );
    ppu.step_pixel(); // 001 022 -> 001 023
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 023 -> 001 024
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1409 );
    ppu.expect_vram_read( 0x1899, 0x19 );
    ppu.step_pixel(); // 001 024 -> 001 025
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 025 -> 001 026
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_vram_read( 0x240A, 0x8A );
    ppu.step_pixel(); // 001 026 -> 001 027
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 027 -> 001 028
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 001 028 -> 001 029
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 029 -> 001 030
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_vram_read( 0x18A1, 0x21 );
    ppu.step_pixel(); // 001 030 -> 001 031
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 031 -> 001 032
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140A );
    ppu.expect_vram_read( 0x18A9, 0x29 );
    ppu.step_pixel(); // 001 032 -> 001 033
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 033 -> 001 034
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_vram_read( 0x240B, 0x8B );
    ppu.step_pixel(); // 001 034 -> 001 035
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 035 -> 001 036
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_vram_read( 0x27C2, 0x82 );
    ppu.step_pixel(); // 001 036 -> 001 037
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 037 -> 001 038
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_vram_read( 0x18B1, 0x31 );
    ppu.step_pixel(); // 001 038 -> 001 039
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 039 -> 001 040
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140B );
    ppu.expect_vram_read( 0x18B9, 0x39 );
    ppu.step_pixel(); // 001 040 -> 001 041
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 041 -> 001 042
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_vram_read( 0x240C, 0x8C );
    ppu.step_pixel(); // 001 042 -> 001 043
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 043 -> 001 044
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 001 044 -> 001 045
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 045 -> 001 046
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_vram_read( 0x18C1, 0x41 );
    ppu.step_pixel(); // 001 046 -> 001 047
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 047 -> 001 048
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140C );
    ppu.expect_vram_read( 0x18C9, 0x49 );
    ppu.step_pixel(); // 001 048 -> 001 049
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 049 -> 001 050
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_vram_read( 0x240D, 0x8D );
    ppu.step_pixel(); // 001 050 -> 001 051
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 051 -> 001 052
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 001 052 -> 001 053
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 053 -> 001 054
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_vram_read( 0x18D1, 0x51 );
    ppu.step_pixel(); // 001 054 -> 001 055
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 055 -> 001 056
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140D );
    ppu.expect_vram_read( 0x18D9, 0x59 );
    ppu.step_pixel(); // 001 056 -> 001 057
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 057 -> 001 058
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_vram_read( 0x240E, 0x8E );
    ppu.step_pixel(); // 001 058 -> 001 059
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 059 -> 001 060
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 001 060 -> 001 061
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 061 -> 001 062
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_vram_read( 0x18E1, 0x61 );
    ppu.step_pixel(); // 001 062 -> 001 063
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 063 -> 001 064
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140E );
    ppu.expect_vram_read( 0x18E9, 0x69 );
    ppu.step_pixel(); // 001 064 -> 001 065
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 065 -> 001 066
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_vram_read( 0x240F, 0x8F );
    ppu.step_pixel(); // 001 066 -> 001 067
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 067 -> 001 068
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_vram_read( 0x27C3, 0x83 );
    ppu.step_pixel(); // 001 068 -> 001 069
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 069 -> 001 070
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_vram_read( 0x18F1, 0x71 );
    ppu.step_pixel(); // 001 070 -> 001 071
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 071 -> 001 072
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x140F );
    ppu.expect_vram_read( 0x18F9, 0x79 );
    ppu.step_pixel(); // 001 072 -> 001 073
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 073 -> 001 074
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_vram_read( 0x2410, 0x90 );
    ppu.step_pixel(); // 001 074 -> 001 075
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 075 -> 001 076
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 001 076 -> 001 077
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 077 -> 001 078
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_vram_read( 0x1901, 0x81 );
    ppu.step_pixel(); // 001 078 -> 001 079
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 079 -> 001 080
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1410 );
    ppu.expect_vram_read( 0x1909, 0x89 );
    ppu.step_pixel(); // 001 080 -> 001 081
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 081 -> 001 082
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_vram_read( 0x2411, 0x91 );
    ppu.step_pixel(); // 001 082 -> 001 083
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 083 -> 001 084
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 001 084 -> 001 085
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 085 -> 001 086
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_vram_read( 0x1911, 0x91 );
    ppu.step_pixel(); // 001 086 -> 001 087
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 087 -> 001 088
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1411 );
    ppu.expect_vram_read( 0x1919, 0x99 );
    ppu.step_pixel(); // 001 088 -> 001 089
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 089 -> 001 090
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_vram_read( 0x2412, 0x92 );
    ppu.step_pixel(); // 001 090 -> 001 091
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 091 -> 001 092
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 001 092 -> 001 093
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 093 -> 001 094
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_vram_read( 0x1921, 0xA1 );
    ppu.step_pixel(); // 001 094 -> 001 095
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 095 -> 001 096
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1412 );
    ppu.expect_vram_read( 0x1929, 0xA9 );
    ppu.step_pixel(); // 001 096 -> 001 097
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 097 -> 001 098
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_vram_read( 0x2413, 0x93 );
    ppu.step_pixel(); // 001 098 -> 001 099
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 099 -> 001 100
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_vram_read( 0x27C4, 0x84 );
    ppu.step_pixel(); // 001 100 -> 001 101
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 101 -> 001 102
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_vram_read( 0x1931, 0xB1 );
    ppu.step_pixel(); // 001 102 -> 001 103
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 103 -> 001 104
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1413 );
    ppu.expect_vram_read( 0x1939, 0xB9 );
    ppu.step_pixel(); // 001 104 -> 001 105
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 105 -> 001 106
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_vram_read( 0x2414, 0x94 );
    ppu.step_pixel(); // 001 106 -> 001 107
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 107 -> 001 108
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 001 108 -> 001 109
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 109 -> 001 110
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_vram_read( 0x1941, 0xC1 );
    ppu.step_pixel(); // 001 110 -> 001 111
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 111 -> 001 112
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1414 );
    ppu.expect_vram_read( 0x1949, 0xC9 );
    ppu.step_pixel(); // 001 112 -> 001 113
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 113 -> 001 114
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_vram_read( 0x2415, 0x95 );
    ppu.step_pixel(); // 001 114 -> 001 115
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 115 -> 001 116
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 001 116 -> 001 117
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 117 -> 001 118
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_vram_read( 0x1951, 0xD1 );
    ppu.step_pixel(); // 001 118 -> 001 119
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 119 -> 001 120
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1415 );
    ppu.expect_vram_read( 0x1959, 0xD9 );
    ppu.step_pixel(); // 001 120 -> 001 121
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 121 -> 001 122
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_vram_read( 0x2416, 0x96 );
    ppu.step_pixel(); // 001 122 -> 001 123
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 123 -> 001 124
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 001 124 -> 001 125
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 125 -> 001 126
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_vram_read( 0x1961, 0xE1 );
    ppu.step_pixel(); // 001 126 -> 001 127
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 127 -> 001 128
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1416 );
    ppu.expect_vram_read( 0x1969, 0xE9 );
    ppu.step_pixel(); // 001 128 -> 001 129
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 129 -> 001 130
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_vram_read( 0x2417, 0x97 );
    ppu.step_pixel(); // 001 130 -> 001 131
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 131 -> 001 132
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_vram_read( 0x27C5, 0x85 );
    ppu.step_pixel(); // 001 132 -> 001 133
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 133 -> 001 134
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_vram_read( 0x1971, 0xF1 );
    ppu.step_pixel(); // 001 134 -> 001 135
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 135 -> 001 136
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1417 );
    ppu.expect_vram_read( 0x1979, 0xF9 );
    ppu.step_pixel(); // 001 136 -> 001 137
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 137 -> 001 138
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_vram_read( 0x2418, 0x98 );
    ppu.step_pixel(); // 001 138 -> 001 139
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 139 -> 001 140
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 001 140 -> 001 141
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 141 -> 001 142
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_vram_read( 0x1981, 0x01 );
    ppu.step_pixel(); // 001 142 -> 001 143
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 143 -> 001 144
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1418 );
    ppu.expect_vram_read( 0x1989, 0x09 );
    ppu.step_pixel(); // 001 144 -> 001 145
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 145 -> 001 146
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_vram_read( 0x2419, 0x99 );
    ppu.step_pixel(); // 001 146 -> 001 147
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 147 -> 001 148
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 001 148 -> 001 149
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 149 -> 001 150
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_vram_read( 0x1991, 0x11 );
    ppu.step_pixel(); // 001 150 -> 001 151
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 151 -> 001 152
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1419 );
    ppu.expect_vram_read( 0x1999, 0x19 );
    ppu.step_pixel(); // 001 152 -> 001 153
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 153 -> 001 154
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_vram_read( 0x241A, 0x9A );
    ppu.step_pixel(); // 001 154 -> 001 155
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 155 -> 001 156
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 001 156 -> 001 157
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 157 -> 001 158
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_vram_read( 0x19A1, 0x21 );
    ppu.step_pixel(); // 001 158 -> 001 159
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 159 -> 001 160
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141A );
    ppu.expect_vram_read( 0x19A9, 0x29 );
    ppu.step_pixel(); // 001 160 -> 001 161
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 161 -> 001 162
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_vram_read( 0x241B, 0x9B );
    ppu.step_pixel(); // 001 162 -> 001 163
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 163 -> 001 164
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_vram_read( 0x27C6, 0x86 );
    ppu.step_pixel(); // 001 164 -> 001 165
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 165 -> 001 166
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_vram_read( 0x19B1, 0x31 );
    ppu.step_pixel(); // 001 166 -> 001 167
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 167 -> 001 168
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141B );
    ppu.expect_vram_read( 0x19B9, 0x39 );
    ppu.step_pixel(); // 001 168 -> 001 169
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 169 -> 001 170
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_vram_read( 0x241C, 0x9C );
    ppu.step_pixel(); // 001 170 -> 001 171
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 171 -> 001 172
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 001 172 -> 001 173
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 173 -> 001 174
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_vram_read( 0x19C1, 0x41 );
    ppu.step_pixel(); // 001 174 -> 001 175
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 175 -> 001 176
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141C );
    ppu.expect_vram_read( 0x19C9, 0x49 );
    ppu.step_pixel(); // 001 176 -> 001 177
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 177 -> 001 178
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_vram_read( 0x241D, 0x9D );
    ppu.step_pixel(); // 001 178 -> 001 179
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 179 -> 001 180
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 001 180 -> 001 181
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 181 -> 001 182
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_vram_read( 0x19D1, 0x51 );
    ppu.step_pixel(); // 001 182 -> 001 183
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 183 -> 001 184
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141D );
    ppu.expect_vram_read( 0x19D9, 0x59 );
    ppu.step_pixel(); // 001 184 -> 001 185
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 185 -> 001 186
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_vram_read( 0x241E, 0x9E );
    ppu.step_pixel(); // 001 186 -> 001 187
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 187 -> 001 188
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 001 188 -> 001 189
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 189 -> 001 190
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_vram_read( 0x19E1, 0x61 );
    ppu.step_pixel(); // 001 190 -> 001 191
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 191 -> 001 192
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141E );
    ppu.expect_vram_read( 0x19E9, 0x69 );
    ppu.step_pixel(); // 001 192 -> 001 193
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 193 -> 001 194
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_vram_read( 0x241F, 0x9F );
    ppu.step_pixel(); // 001 194 -> 001 195
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 195 -> 001 196
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_vram_read( 0x27C7, 0x87 );
    ppu.step_pixel(); // 001 196 -> 001 197
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 197 -> 001 198
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_vram_read( 0x19F1, 0x71 );
    ppu.step_pixel(); // 001 198 -> 001 199
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 199 -> 001 200
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x141F );
    ppu.expect_vram_read( 0x19F9, 0x79 );
    ppu.step_pixel(); // 001 200 -> 001 201
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 201 -> 001 202
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_vram_read( 0x2000, 0x80 );
    ppu.step_pixel(); // 001 202 -> 001 203
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 203 -> 001 204
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 001 204 -> 001 205
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 205 -> 001 206
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_vram_read( 0x1801, 0x81 );
    ppu.step_pixel(); // 001 206 -> 001 207
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 207 -> 001 208
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1000 );
    ppu.expect_vram_read( 0x1809, 0x89 );
    ppu.step_pixel(); // 001 208 -> 001 209
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 209 -> 001 210
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_vram_read( 0x2001, 0x81 );
    ppu.step_pixel(); // 001 210 -> 001 211
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 211 -> 001 212
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 001 212 -> 001 213
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 213 -> 001 214
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_vram_read( 0x1811, 0x91 );
    ppu.step_pixel(); // 001 214 -> 001 215
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 215 -> 001 216
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1001 );
    ppu.expect_vram_read( 0x1819, 0x99 );
    ppu.step_pixel(); // 001 216 -> 001 217
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 217 -> 001 218
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_vram_read( 0x2002, 0x82 );
    ppu.step_pixel(); // 001 218 -> 001 219
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 219 -> 001 220
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 001 220 -> 001 221
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 221 -> 001 222
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_vram_read( 0x1821, 0xA1 );
    ppu.step_pixel(); // 001 222 -> 001 223
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 223 -> 001 224
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1002 );
    ppu.expect_vram_read( 0x1829, 0xA9 );
    ppu.step_pixel(); // 001 224 -> 001 225
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 225 -> 001 226
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_vram_read( 0x2003, 0x83 );
    ppu.step_pixel(); // 001 226 -> 001 227
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 227 -> 001 228
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_vram_read( 0x23C0, 0x80 );
    ppu.step_pixel(); // 001 228 -> 001 229
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 229 -> 001 230
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_vram_read( 0x1831, 0xB1 );
    ppu.step_pixel(); // 001 230 -> 001 231
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 231 -> 001 232
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1003 );
    ppu.expect_vram_read( 0x1839, 0xB9 );
    ppu.step_pixel(); // 001 232 -> 001 233
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 233 -> 001 234
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_vram_read( 0x2004, 0x84 );
    ppu.step_pixel(); // 001 234 -> 001 235
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 235 -> 001 236
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_vram_read( 0x23C1, 0x81 );
    ppu.step_pixel(); // 001 236 -> 001 237
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 237 -> 001 238
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_vram_read( 0x1841, 0xC1 );
    ppu.step_pixel(); // 001 238 -> 001 239
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 239 -> 001 240
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1004 );
    ppu.expect_vram_read( 0x1849, 0xC9 );
    ppu.step_pixel(); // 001 240 -> 001 241
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 241 -> 001 242
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_vram_read( 0x2005, 0x85 );
    ppu.step_pixel(); // 001 242 -> 001 243
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 243 -> 001 244
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_vram_read( 0x23C1, 0x81 );
    ppu.step_pixel(); // 001 244 -> 001 245
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 245 -> 001 246
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_vram_read( 0x1851, 0xD1 );
    ppu.step_pixel(); // 001 246 -> 001 247
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 247 -> 001 248
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1005 );
    ppu.expect_vram_read( 0x1859, 0xD9 );
    ppu.step_pixel(); // 001 248 -> 001 249
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 249 -> 001 250
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_vram_read( 0x2006, 0x86 );
    ppu.step_pixel(); // 001 250 -> 001 251
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 251 -> 001 252
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_vram_read( 0x23C1, 0x81 );
    ppu.step_pixel(); // 001 252 -> 001 253
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 253 -> 001 254
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_vram_read( 0x1861, 0xE1 );
    ppu.step_pixel(); // 001 254 -> 001 255
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_no_vram_read();
    ppu.step_pixel(); // 001 255 -> 001 256
    assert_eq( ppu.get_temporary_address(), 0x14A0 );
    assert_eq( ppu.get_current_address(), 0x1006 );
    ppu.expect_vram_read( 0x1869, 0xE9 );
    ppu.step_pixel(); // 001 256 -> 001 257
    assert_eq!( ppu.scanline(), 1 );
    assert_eq!( ppu.dot(), 257 );
}
